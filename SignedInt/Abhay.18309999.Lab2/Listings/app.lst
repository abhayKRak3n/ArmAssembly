


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; sample program makes the 4 LEDs P1.16, P1.17, P1.18, P
                       1.19 go on and off in sequence
    5 00000000         ; (c) Mike Brady, 2011 -- 2019.
    6 00000000         
    7 00000000                 EXPORT           start
    8 00000000         start
    9 00000000         
   10 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   11 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   12 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   13 00000000         
   14 00000000 E59F1134        ldr              r1,=IO1DIR
   15 00000004 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   16 00000008 E5812000        str              r2,[r1]     ;make them outputs
   17 0000000C E59F112C        ldr              r1,=IO1SET
   18 00000010 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   19 00000014 E59F2128        ldr              r2,=IO1CLR
   20 00000018         ; r1 points to the SET register
   21 00000018         ; r2 points to the CLEAR register
   22 00000018         
   23 00000018         
   24 00000018         Start
   25 00000018 E59F0128        LDR              R0,=number  ;num stored in r0
   26 0000001C E5900000        LDR              R0,[R0]
   27 00000020 E3500000        CMP              R0,0x00000000
   28 00000024 0A000034        BEQ              disp_zero
   29 00000028         
   30 00000028 E3A08000        LDR              R8,=0
   31 0000002C E3500000        CMP              R0,#0
   32 00000030 AA000000        BGE              sign
   33 00000034 EA000002        B                twos_complement
   34 00000038         
   35 00000038         sign
   36 00000038 E3A0380A        ldr              r3,= 0x000A0000 
                                                            ;show sign if pos
   37 0000003C E5823000        str              r3, [r2]    ;output stored in r
                                                            2
   38 00000040 EA000003        b                delay
   39 00000044         
   40 00000044         
   41 00000044         twos_complement
   42 00000044 E3A0380B        LDR              R3,=0X000B0000 
                                                            ;shows if negative
   43 00000048 E5823000        STR              R3,[R2]
   44 0000004C E1E00000        MVN              R0,R0
   45 00000050 E2800001        ADD              R0,R0,#1
   46 00000054         
   47 00000054         delay
   48 00000054 E59F40F0        ldr              r4,=100000000 ;delay for output
                                                            
   49 00000058         L1



ARM Macro Assembler    Page 2 


   50 00000058 E2444001        sub              r4, r4, #1
   51 0000005C E3540000        cmp              r4, #0
   52 00000060 AAFFFFFC        bge              L1
   53 00000064 E5813000        str              r3,[r1]
   54 00000068 EAFFFFFF        B                conv_num
   55 0000006C         
   56 0000006C         conv_num
   57 0000006C E59F50DC        LDR              R5,=arr
   58 00000070 E3A06000        LDR              R6, =0
   59 00000074         
   60 00000074         next1                                ;calc next divisor 
                                                            
   61 00000074 E7958106        LDR              R8,[R5,R6,LSL #2]
   62 00000078 E1500008        CMP              R0,R8
   63 0000007C AA000001        BGE              Digit_Count
   64 00000080 E2866001        ADD              R6,R6,#1
   65 00000084 EAFFFFFA        B                next1
   66 00000088         
   67 00000088         Digit_Count
   68 00000088 E3A07000        LDR              R7,=0
   69 0000008C         
   70 0000008C         division1
   71 0000008C E0400008        SUB              R0,R0,R8    ;subtracting number
                                                             and billion to get
                                                             a digit  
   72 00000090 E2877001        ADD              R7,R7,#1
   73 00000094 E1500008        CMP              R0,R8
   74 00000098 AAFFFFFB        BGE              division1
   75 0000009C         
   76 0000009C         display_number                       ;displaying that nu
                                                            mber
   77 0000009C E1A07807        MOV              R7, R7, LSL #16
   78 000000A0 E1A03007        MOV              R3, R7
   79 000000A4 E5823000        STR              R3,[R2]
   80 000000A8         
   81 000000A8         
   82 000000A8         
   83 000000A8         delay2
   84 000000A8 E59F409C        LDR              R4,=100000000
   85 000000AC         Loop2
   86 000000AC E2444001        SUB              R4, R4, #1
   87 000000B0 E3540000        CMP              R4, #0
   88 000000B4 AAFFFFFC        BGE              Loop2
   89 000000B8         
   90 000000B8 E5813000        STR              r3,[r1]
   91 000000BC         
   92 000000BC         
   93 000000BC         ;next_divisor pt 2
   94 000000BC E3500000        CMP              R0, #0
   95 000000C0 1A000001        BNE              continue
   96 000000C4 E3560009        CMP              R6, #9
   97 000000C8 CAFFFFD2        BGT              Start
   98 000000CC         
   99 000000CC         continue
  100 000000CC E2866001        ADD              R6,R6,#1
  101 000000D0 E7958106        LDR              R8,[R5,R6, LSL #2]
  102 000000D4 EAFFFFFF        B                Digit_Count2
  103 000000D8         
  104 000000D8         Digit_Count2



ARM Macro Assembler    Page 3 


  105 000000D8 E1A09000        MOV              R9,R0
  106 000000DC E3A07000        LDR              R7,=0
  107 000000E0         
  108 000000E0         division2
  109 000000E0 E0500008        SUBS             R0,R0,R8
  110 000000E4 E2877001        ADD              R7,R7,#1
  111 000000E8 E1500008        CMP              R0,R8
  112 000000EC AAFFFFFB        BGE              division2
  113 000000F0         
  114 000000F0         
  115 000000F0 5AFFFFE9        BPL              display_number
  116 000000F4 E3570001        CMP              R7,#1
  117 000000F8 1AFFFFE7        BNE              display_number
  118 000000FC         
  119 000000FC         
  120 000000FC         disp_zero
  121 000000FC E3A0380F        LDR              R3,=0x000f0000
  122 00000100 E5823000        STR              R3,[r2]
  123 00000104 E1A00009        MOV              R0, R9
  124 00000108 EAFFFFE6        B                delay2
  125 0000010C         
  126 0000010C         
  127 0000010C EAFFFFFE 
                       stop    B                stop
  128 00000110         
  129 00000110         
  130 00000110         ;practical 2
  131 00000110         
  132 00000110         
  133 00000110         
  134 00000110         ;subtracting numbers with 1 billion,1hundred million,etc
                        ,to get each digit, in a loop 
  135 00000110 3B9ACA00 
              05F5E100 
              00989680 
              000F4240 
              000186A0 
              00002710 
              000003E8 
              00000064 
              0000000A 
              00000001 arr     DCD              1000000000,100000000,10000000,1
000000,100000,10000,1000,100,10,1
  136 00000138         
  137 00000138         ;sample num used 
  138 00000138 00000419 
                       number  DCD              0x00000419
  139 0000013C         
  140 0000013C                 END
              E0028018 
              E0028014 
              E002801C 
              00000000 
              05F5E100 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
Digit_Count 00000088

Symbol: Digit_Count
   Definitions
      At line 67 in file App.s
   Uses
      At line 63 in file App.s
Comment: Digit_Count used once
Digit_Count2 000000D8

Symbol: Digit_Count2
   Definitions
      At line 104 in file App.s
   Uses
      At line 102 in file App.s
Comment: Digit_Count2 used once
L1 00000058

Symbol: L1
   Definitions
      At line 49 in file App.s
   Uses
      At line 52 in file App.s
Comment: L1 used once
Loop2 000000AC

Symbol: Loop2
   Definitions
      At line 85 in file App.s
   Uses
      At line 88 in file App.s
Comment: Loop2 used once
Start 00000018

Symbol: Start
   Definitions
      At line 24 in file App.s
   Uses
      At line 97 in file App.s
Comment: Start used once
arr 00000110

Symbol: arr
   Definitions
      At line 135 in file App.s
   Uses
      At line 57 in file App.s
Comment: arr used once
continue 000000CC

Symbol: continue



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 99 in file App.s
   Uses
      At line 95 in file App.s
Comment: continue used once
conv_num 0000006C

Symbol: conv_num
   Definitions
      At line 56 in file App.s
   Uses
      At line 54 in file App.s
Comment: conv_num used once
delay 00000054

Symbol: delay
   Definitions
      At line 47 in file App.s
   Uses
      At line 38 in file App.s
Comment: delay used once
delay2 000000A8

Symbol: delay2
   Definitions
      At line 83 in file App.s
   Uses
      At line 124 in file App.s
Comment: delay2 used once
disp_zero 000000FC

Symbol: disp_zero
   Definitions
      At line 120 in file App.s
   Uses
      At line 28 in file App.s
Comment: disp_zero used once
display_number 0000009C

Symbol: display_number
   Definitions
      At line 76 in file App.s
   Uses
      At line 115 in file App.s
      At line 117 in file App.s

division1 0000008C

Symbol: division1
   Definitions
      At line 70 in file App.s
   Uses
      At line 74 in file App.s
Comment: division1 used once
division2 000000E0

Symbol: division2
   Definitions
      At line 108 in file App.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 112 in file App.s
Comment: division2 used once
next1 00000074

Symbol: next1
   Definitions
      At line 60 in file App.s
   Uses
      At line 65 in file App.s
Comment: next1 used once
number 00000138

Symbol: number
   Definitions
      At line 138 in file App.s
   Uses
      At line 25 in file App.s
Comment: number used once
sign 00000038

Symbol: sign
   Definitions
      At line 35 in file App.s
   Uses
      At line 32 in file App.s
Comment: sign used once
start 00000000

Symbol: start
   Definitions
      At line 8 in file App.s
   Uses
      At line 7 in file App.s
Comment: start used once
stop 0000010C

Symbol: stop
   Definitions
      At line 127 in file App.s
   Uses
      At line 127 in file App.s
Comment: stop used once
twos_complement 00000044

Symbol: twos_complement
   Definitions
      At line 41 in file App.s
   Uses
      At line 33 in file App.s
Comment: twos_complement used once
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 12 in file App.s
   Uses
      At line 19 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 10 in file App.s
   Uses
      At line 14 in file App.s
Comment: IO1DIR used once
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 11 in file App.s
   Uses
      At line 17 in file App.s
Comment: IO1SET used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
1 symbol
360 symbols in table
